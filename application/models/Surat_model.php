<?php
/*
 * Generated by CRUDigniter v3.2
 * www.crudigniter.com
 */

class Surat_model extends CI_Model
{
    public function __construct()
    {
        parent::__construct();
        $this->load->model('Pegawai_model');
        $this->load->model('Mahasiswa_model');
        $this->load->model('Kategorisurat_model');
        $this->load->library('mylib');

    }

    /*
     * Get suratinternal by idarsip_surat
     */
    public function get_mahasiswa($IdUser)
    {
        return $this->db->query("SELECT
                `suratmasuk`.*,
                `surat`.`nomorsurat`,
                `surat`.`perihal`,
                `surat`.`tanggal`,
                `surat`.`berkas`,
                `surat`.`idkategori_surat`,
                `surat`.`idpengguna` AS `idpengirim`,
                `pengguna`.`jenis`,
                `struktural`.`nm_struktural`,
                IF(`pengguna`.`jenis`='Pegawai', (SELECT Nama from pegawai where pegawai.idpengguna=surat.idpengguna),
                (SELECT nama from eksternal where eksternal.idpengguna=surat.idpengguna)) as namapengirim
            FROM
                `suratmasuk`
                LEFT JOIN `surat` ON `surat`.`idsuratkeluar` = `suratmasuk`.`idsuratkeluar`
                LEFT JOIN `pengguna` ON `suratmasuk`.`idpengguna` = `pengguna`.`idpengguna`
                LEFT JOIN `pegawai` ON `pegawai`.`idpengguna` = `surat`.`idpengguna`
                LEFT JOIN `eksternal` ON `eksternal`.`idpengguna` = `surat`.`idpengguna`
                LEFT JOIN `pejabat` ON `pegawai`.`idpegawai` = `pejabat`.`idpegawai`
                LEFT JOIN `struktural` ON `pejabat`.`idstruktural` = `struktural`.`idstruktural`
                LEFT JOIN `mahasiswa` ON `pengguna`.`idpengguna` = `mahasiswa`.`idpengguna`
            WHERE mahasiswa.IdUser = '$IdUser'")->result();
    }

    public function getdatasurat()
    {
        $idpengguna = $this->session->userdata('idpengguna');

        $datas = [
            'suratmasuk' => array(),
            'suratkeluar' => array(),
            'pegawai' => $this->db->query("SELECT
                    `struktural`.*,
                    `pegawai`.*
                FROM
                    `pejabat`
                    LEFT JOIN `struktural` ON `pejabat`.`idstruktural` =
                `struktural`.`idstruktural`
                    LEFT JOIN `pegawai` ON `pegawai`.`idpegawai` = `pejabat`.`idpegawai`
                WHERE pejabat.status='true'")->result(),
            'mahasiswa' => $this->Mahasiswa_model->get_all_mahasiswa(),
            'kategorisurat' => $this->Kategorisurat_model->get_all_kategorisurat(),
        ];
        $datas['suratmasuk'] = $this->db->query("SELECT
            `suratmasuk`.*,
            `surat`.`nomorsurat`,
            `surat`.`perihal`,
            `surat`.`tanggal`,
            `surat`.`berkas`,
            `surat`.`idkategori_surat`,
            `surat`.`idpengguna` AS `idpengirim`,
            `pengguna`.`jenis`,
            `struktural`.`nm_struktural`,
            IF(`pengguna`.`jenis`='Pegawai', (SELECT Nama from pegawai where pegawai.idpengguna=surat.idpengguna),
            (SELECT nama from eksternal where eksternal.idpengguna=surat.idpengguna)) as namapengirim
        FROM
            `suratmasuk`
            LEFT JOIN `surat`
        ON `surat`.`idsuratkeluar` = `suratmasuk`.`idsuratkeluar`
            LEFT JOIN `pengguna` ON `surat`.`idpengguna` = `pengguna`.`idpengguna`
            LEFT JOIN `pegawai` ON `pegawai`.`idpengguna` = `surat`.`idpengguna`
            LEFT JOIN `eksternal` ON `eksternal`.`idpengguna` = `surat`.`idpengguna`
            LEFT JOIN `pejabat` ON `pegawai`.`idpegawai` = `pejabat`.`idpegawai`
            LEFT JOIN `struktural` ON `pejabat`.`idstruktural` = `struktural`.`idstruktural`
        WHERE suratmasuk.idpengguna = '$idpengguna'")->result();

        $datas['suratkeluar'] = $this->db->query("SELECT
            `surat`.*,
            `suratmasuk`.`idarsip_surat`,
            `suratmasuk`.`status`,
            `suratmasuk`.`tipe`,
            `suratmasuk`.`idpengguna` AS `idpenerima`,
            `pengguna`.`jenis`,
            `struktural`.`nm_struktural`,
                if(pengguna.jenis='Pegawai', (SELECT Nama from pegawai where pegawai.idpengguna=suratmasuk.idpengguna),
                (SELECT nmmhs from mahasiswa where mahasiswa.idpengguna=suratmasuk.idpengguna)) as namapenerima
        FROM
            `surat`
            LEFT JOIN `suratmasuk` ON `surat`.`idsuratkeluar` = `suratmasuk`.`idsuratkeluar`
            LEFT JOIN `pengguna` ON `suratmasuk`.`idpengguna` = `pengguna`.`idpengguna`
            LEFT JOIN `pegawai` ON `suratmasuk`.`idpengguna` = `pegawai`.`idpengguna`
            LEFT JOIN `pejabat` ON `pegawai`.`idpegawai` = `pejabat`.`idpegawai`
            LEFT JOIN `struktural` ON `struktural`.`idstruktural` =
            `pejabat`.`idstruktural`
            LEFT JOIN `mahasiswa` ON `mahasiswa`.`idpengguna` = `suratmasuk`.`idpengguna`
        WHERE surat.idpengguna='$idpengguna'")->result();
        return $datas;
    }

    public function get_suratinternal($idarsip_surat)
    {
        return $this->db->get_where('suratinternal', array('idarsip_surat' => $idarsip_surat))->row_array();
    }

    /*
     * Get all suratinternal
     */
    public function get_all_suratinternal()
    {
        $this->db->order_by('idarsip_surat', 'desc');
        return $this->db->get('suratinternal')->result_array();
    }

    /*
     * function to add new suratinternal
     */
    public function add_surat($params)
    {

        $this->db->trans_begin();
        $itemsurat = [
            'nomorsurat' => $params['nomorsurat'],
            'perihal' => $params['perihal'],
            'tanggal' => date('Y-m-d'),
            'berkas' => $params['berkas'],
            'idkategori_surat' => $params['idkategori_surat'],
            'idpengguna' => $this->session->userdata('idpengguna'),

        ];
        $this->db->insert('surat', $itemsurat);
        $idsuratkeluar = $this->db->insert_id();
        $data['data'] = [
            'nm_struktural' => $this->session->userdata('nm_struktural'),
            'berkas' => $params['berkas'],
        ];
        $mesg = $this->load->view('mailing', $data, true);
        foreach ($params['penerima'] as $key => $value) {
            $suratmasuk = [
                'status' => 'false',
                'idsuratkeluar' => $idsuratkeluar,
                'idpengguna' => $value['idpengguna'],
                'tipe' => 'Penerima',
            ];
            $this->db->insert('suratmasuk', $suratmasuk);
            if ($this->sendmail($value['Email'], $mesg)) {
                if (!is_null($value['chatid'])) {
                    $text = "From " . $this->session->userdata('nm_struktural') . " \nBerkas Lampiran: " . base_url('assets/berkas/') . $params['berkas'];
                    $this->mylib->sendtelegram($value['chatid'], $text);
                }
            }
        }
        foreach ($params['tembusan'] as $key => $value) {
            $suratmasuk = [
                'status' => 'false',
                'idsuratkeluar' => $idsuratkeluar,
                'idpengguna' => $value['idpengguna'],
                'tipe' => 'Tembusan',
            ];
            $this->db->insert('suratmasuk', $suratmasuk);
            if ($this->sendmail($value['Email'], $mesg)) {
                if (!is_null($value['chatid'])) {
                    $text = "From " . $this->session->userdata('nm_struktural') . " \nBerkas Lampiran: " . base_url('assets/berkas/') . $params['berkas'];
                    $this->mylib->sendtelegram($value['chatid'], $text);
                }
            }
        }
        if ($this->db->trans_status()) {
            $this->db->trans_commit();
            return $this->getdatasurat();
        } else {
            $this->db->trans_rollback();
            $path_to_file = './assets/berkas/' . $params['berkas'];
            unlink($path_to_file);
            return false;
        }
    }

    /*
     * function to update suratinternal
     */
    public function update_suratinternal($idarsip_surat, $params)
    {
        $this->db->where('idarsip_surat', $idarsip_surat);
        return $this->db->update('suratinternal', $params);
    }

    /*
     * function to delete suratinternal
     */
    public function delete_suratinternal($idarsip_surat)
    {
        return $this->db->delete('suratinternal', array('idarsip_surat' => $idarsip_surat));
    }

    public function sendmail($to_email, $message)
    {

        $from_email = "sistemsurat@stimiksepnop.ac.id";
        $config['protocol'] = 'smtp';
        $config['smtp_host'] = 'srv26.niagahoster.com';
        $config['smtp_crypto'] = 'ssl';
        $config['smtp_port'] = 465;
        $config['smtp_user'] = $from_email;
        $config['smtp_pass'] = 'Stimik1011';
        $config['charset'] = 'iso-8859-1';
        $config['newline'] = "\r\n";
        $config['smtp_timeout'] = '7';
        $config['mailtype'] = 'html'; // or html
        // $config['validation'] = true;
        $this->load->library('email');
        $this->email->initialize($config);
        $this->email->from($from_email, 'Sistem Surat STIMIK ');
        $this->email->to($to_email);
        $this->email->subject('Nofication');
        $this->email->message($message);

        //Send mail
        if ($this->email->send()) {
            return true;
        } else {
            $a = show_error($this->email->print_debugger());
            return $a;
        }
    }
}
