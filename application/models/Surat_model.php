<?php
/*
 * Generated by CRUDigniter v3.2
 * www.crudigniter.com
 */

class Surat_model extends CI_Model
{
    public function __construct()
    {
        parent::__construct();
        $this->load->model('Pegawai_model');
        $this->load->model('Mahasiswa_model');
        $this->load->model('Kategorisurat_model');
        $this->load->library('mylib');

    }

    /*
     * Get suratinternal by idarsip_surat
     */

    public function getdatasurat()
    {
        $idpengguna = $this->session->userdata('idpengguna');

        $datas = [
            'suratmasuk' => array(),
            'suratkeluar' => array(),
            'pegawai' => $this->db->query("SELECT
                    `struktural`.*,
                    `pegawai`.`idpengguna`,
                    `pegawai`.`Nama`,
                    `pegawai`.`idpegawai`
                FROM
                    `pejabat`
                    LEFT JOIN `struktural` ON `pejabat`.`idstruktural` =
                `struktural`.`idstruktural`
                    LEFT JOIN `pegawai` ON `pegawai`.`idpegawai` = `pejabat`.`idpegawai`
                WHERE pejabat.status='true'")->result(),
            'mahasiswa' => $this->Mahasiswa_model->get_all_mahasiswa(),
            'kategorisurat' => $this->Kategorisurat_model->get_all_kategorisurat(),
        ];
        $datas['suratmasuk'] = $this->db->query("SELECT
            `suratmasuk`.*,
            `surat`.`nomorsurat`,
            `surat`.`perihal`,
            `surat`.`tanggal`,
            `surat`.`berkas`,
            `surat`.`idkategori_surat`,
            `surat`.`idpengguna` AS `idpengirim`,
            `pengguna`.`jenis`,
            IF(`pengguna`.`jenis`='Pegawai', (SELECT Nama from pegawai where pegawai.idpengguna=surat.idpengguna),
            (SELECT nama from eksternal where eksternal.idpengguna=surat.idpengguna)) as namapengirim
        FROM
            `suratmasuk`
            LEFT JOIN `surat`
        ON `surat`.`idsuratkeluar` = `surat`.`suratmasuk`.`idsuratkeluar`
            LEFT JOIN `pengguna` ON `surat`.`idpengguna` = `pengguna`.`idpengguna`
            LEFT JOIN `pegawai` ON `pegawai`.`idpengguna` = `surat`.`idpengguna`
            LEFT JOIN `eksternal` ON `eksternal`.`idpengguna` = `surat`.`idpengguna`
        WHERE suratmasuk.idpengguna = '$idpengguna'")->result();

        $datas['suratkeluar'] = $this->db->query("SELECT
        `surat`.*,
        `suratmasuk`.`idarsip_surat`,
        `suratmasuk`.`status`,
        `suratmasuk`.`tipe`,
        `suratmasuk`.`idpengguna` AS `idpenerima`,
        `pengguna`.`jenis`,
            if(pengguna.jenis='Pegawai', (SELECT Nama from pegawai where pegawai.idpengguna=suratmasuk.idpengguna),
            (SELECT Nama from pegawai where pegawai.idpengguna=suratmasuk.idpengguna)) as namapenerima
        FROM
        `surat`
        LEFT JOIN `suratmasuk` ON `surat`.`idpengguna` = `suratmasuk`.`idpengguna`
        LEFT JOIN `pengguna` ON `surat`.`idpengguna` = `pengguna`.`idpengguna`
        LEFT JOIN `pegawai` ON `suratmasuk`.`idpengguna` = `pegawai`.`idpengguna`
        LEFT JOIN `pejabat` ON `pegawai`.`idpegawai` = `pejabat`.`idpegawai`
        LEFT JOIN `struktural` ON `struktural`.`idstruktural` =
        `pejabat`.`idstruktural`
        LEFT JOIN `mahasiswa` ON `mahasiswa`.`idpengguna` = `suratmasuk`.`idpengguna`
        WHERE surat.idpengguna='$idpengguna'")->result();
        return $datas;
    }

    public function get_suratinternal($idarsip_surat)
    {
        return $this->db->get_where('suratinternal', array('idarsip_surat' => $idarsip_surat))->row_array();
    }

    /*
     * Get all suratinternal
     */
    public function get_all_suratinternal()
    {
        $this->db->order_by('idarsip_surat', 'desc');
        return $this->db->get('suratinternal')->result_array();
    }

    /*
     * function to add new suratinternal
     */
    public function add_surat($params)
    {
        $this->db->trans_begin();
        $itemsurat = [
            'nomorsurat' => $params['nomorsurat'],
            'perihal' => $params['perihal'],
            'tanggal' => date('Y-m-d'),
            'berkas' => $params['berkas'],
            'idkategori_surat' => $params['idkategori_surat'],
            'idpengguna' => $this->session->userdata('idpengguna'),

        ];
        $this->db->insert('surat', $itemsurat);
        $idsuratkeluar = $this->db->insert_id();
        $mesg = $this->load->view('mailing', $params, true);
        foreach ($params['penerima'] as $key => $value) {
            $suratmasuk = [
                'status' => 'false',
                'idsuratkeluar' => $idsuratkeluar,
                'idpengguna' => $value['idpengguna'],
                'tipe' => 'Penerima',
            ];
            $this->db->insert('suratmasuk', $suratmasuk);
            if ($this->mylib->sendmail($params['Email'], $mesg)) {
                $text = "From " . $params['nm_struktural'] . " \nBerkas Lampiran: " . base_url('assets/berkas/') . $params['berkas'];
                $this->mylib->sendtelegram($params['telegramid'], $text);
            }
        }
        foreach ($params['tembusan'] as $key => $value) {
            $suratmasuk = [
                'status' => 'false',
                'idsuratkeluar' => $idsuratkeluar,
                'idpengguna' => $value['idpengguna'],
                'tipe' => 'Tembusan',
            ];
            $this->db->insert('suratmasuk', $suratmasuk);
            if ($this->mylib->sendmail($params['Email'], $mesg)) {
                $text = "From " . $params['nm_struktural'] . " \nBerkas Lampiran: " . base_url('assets/berkas/') . $params['berkas'];
                $this->mylib->sendtelegram($params['telegramid'], $text);
            }
        }
        if ($this->db->trans_status()) {
            $this->db->trans_commit();
            return $this->getdatasurat();
        } else {
            $this->db->trans_rollback();
            $path_to_file = './assets/berkas/' . $params['berkas'];
            unlink($path_to_file);
            return false;
        }
    }

    /*
     * function to update suratinternal
     */
    public function update_suratinternal($idarsip_surat, $params)
    {
        $this->db->where('idarsip_surat', $idarsip_surat);
        return $this->db->update('suratinternal', $params);
    }

    /*
     * function to delete suratinternal
     */
    public function delete_suratinternal($idarsip_surat)
    {
        return $this->db->delete('suratinternal', array('idarsip_surat' => $idarsip_surat));
    }
}
